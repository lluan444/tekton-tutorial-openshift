# BUILD go-lib
FROM golang:1.17.0-alpine AS go-lib

ARG API_USER
ARG API_PASSWORD

#RUN go env -w GOPROXY="https://${API_USER}:${API_PASSWORD}@na.artifactory.swg-devops.com/artifactory/api/go/wcp-otc-common-team-go-virtual" 

# Copy in the go src
WORKDIR /go/src/github.ibm.com/gitsecure-discovery/

ARG API_USER
ARG API_PASSWORD

COPY pkg/    		pkg/
COPY cmd/    		cmd/
COPY common/    	common/
COPY internal/    	internal/
COPY logger/        logger/


# Copy Go Modules manifests and download the modules
COPY go.mod go.mod
COPY go.sum go.sum
RUN go mod download
RUN go mod tidy


# Build go 
RUN CGO_ENABLED=0 GOOS=linux go build -o /usr/local/bin/discovery github.ibm.com/gitsecure-discovery/cmd/discovery    
# ####################################################################################################

# UBI8 comes with yum package manager
FROM registry.access.redhat.com/ubi8/ubi:latest

#Add Repo to add AdoptOpenJDK11-OpenJ9
COPY /repos/adoptopenjdk11-openj9.repo /etc/yum.repos.d/

# Install required dependencies
RUN yum -y upgrade-minimal && yum install -y wget gnupg ca-certificates python3-pip curl \
    nodejs npm wget sudo adoptopenjdk-11-openj9 unzip @python27 golang 
# Upgrade Openssl 
RUN dnf install -y openssl-libs 

WORKDIR /

# Install JQ & ibmcloud & Maven & Gradle
RUN wget -O jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 &&\
    chmod +x ./jq &&\
    cp jq /usr/bin &&\
    jq --version &&\
    wget https://download.clis.cloud.ibm.com/ibm-cloud-cli/1.2.0/IBM_Cloud_CLI_1.2.0_amd64.tar.gz -O ibmcloud-cli.tar.gz &&\
    tar xvf ibmcloud-cli.tar.gz &&\
    rm ibmcloud-cli.tar.gz &&\
    cp Bluemix_CLI/bin/ibmcloud /usr/local/bin/ &&\
    ibmcloud --version && \
    wget https://mirrors.ocf.berkeley.edu/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz -O maven.tar.gz && \
    tar -zxvf maven.tar.gz && \
    mv apache-maven-3.6.3 /opt/maven && \
    rm maven.tar.gz && \
    ln -s apache-maven-3.6.3 maven && \
    wget https://services.gradle.org/distributions/gradle-6.8-bin.zip && \
    unzip gradle-*.zip && \
    mkdir /opt/gradle && \
    cp -pr gradle-*/* /opt/gradle

# Add required Environmental Variables for Gradle
ENV PATH=/opt/gradle/bin:${PATH}
RUN gradle -v
# Add required Java Environmental Variables for Maven
ENV JAVA_HOME=/usr/lib/jvm/adoptopenjdk-11-openj9/
ENV M2_HOME=/opt/maven
ENV PATH=${M2_HOME}/bin:${PATH}
RUN mvn -version


RUN curl -L https://download.docker.com/linux/static/stable/x86_64/docker-19.03.0.tgz --output /tmp/docker-19.03.0.tgz && \
    tar -C /usr/share/ -xf /tmp/docker-19.03.0.tgz && \
    cp /usr/share/docker/docker /usr/local/bin/

RUN curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" &&\
    cp kubectl /usr/bin && \
    chmod +x /usr/bin/kubectl

RUN rm -rf /etc/apache2

RUN curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o get-pip.py && \
    python2 get-pip.py

# GO Library
COPY --from=go-lib /usr/local/bin/discovery /usr/local/bin/discovery
COPY LICENSE.txt .
COPY NON_IBM_LICENSE.txt .
COPY NOTICES.txt .
# Policies and scripts
COPY imgtools/xml2json.js /etc/gitsecure/scripts/

# POM-PARSER
RUN cd /etc/gitsecure/scripts/ && npm install pom-parser
# CentOS add user to wheel vs root - https://linuxhint.com/centos_add_users_sudoers/
#RUN groupadd -r gitsecure &&\
#	useradd -m gitsecure -g gitsecure -d /gitsecure &&\
#	usermod -a -G gitsecure gitsecure &&\
#	usermod -aG sudo gitsecure &&\
#	echo 'gitsecure ALL=(ALL) NOPASSWD: ALL' | sudo EDITOR='tee -a' visudo 

#USER gitsecure
